{"name":"Activeforce","tagline":"Activeforce provides a simple to use and extend interface to Salesforce using the REST API","body":"# ActiveForce\r\n\r\nActiveforce provides a clean ActiveRecord-like interface to the SalesForce.com REST API.\r\n\r\n* Detects the schema of the SalesForce Objects on the fly, so that you can interact with the familiar ActiveRecord style attribute accessor methods.\r\n* Provides full access to all methods provided to the SQL-like Salesforce Object Query Language (SOQL).\r\n* Integrates with Salesforce.com REST-based BULK API.\r\n\r\n## Configuration\r\n\r\n### Simple Usage\r\n    Salesforce.configure do\r\n      username \"foo@bar.com\"\r\n      password \"salesforcepassword\"\r\n    end\r\n  \r\nThe password is a combination of your salesforce password and the API Token\r\n\r\n### Specifying a particular API version\r\n\r\nBy default, activeforce uses version 22 of the Salesforce REST API. To specify another version:\r\n\r\n    Salesforce.configure do\r\n      username \"foo@bar.com\"\r\n      password \"salesforcepasswordapitoken\" # This should be your salesforce password + your API Token\r\n      api_version 18\r\n    end\r\n\r\n### Using the Sandbox\r\n    Salesforce.configure do\r\n      username \"foo@bar.com.sandbox\"\r\n      password \"salesforcepassword\"\r\n      end\r\n\r\n### Finders\r\n\r\nactiveforce provides implementation for some standard Salesforce Objects like Account, Contact, Opportunity, etc\r\n\r\n### Accessing custom objects\r\n\r\nactiveforce provides an easy way to declare models for custom objects or other SalesForce objects that are not included by default.\r\n\r\n    class Salesforce::CustomObject < Salesforce::Base\r\n      self.custom_object = true\r\n    end\r\n    \r\n    # or \r\n    \r\n    class Salesforce::Feed < Salesforce::Base\r\n    end\r\n    \r\n\r\n#### Find all objects\r\n    Salesforce::Account.all\r\n  \r\n#### Find Account by id\r\n    Salesforce::Account.find(\"accountid\")\r\n  \r\n#### Dynamic Finders\r\n    Salesforce::Account.find_by_name(\"accountname\")\r\n  \r\n#### Specifying conditions\r\n\r\n    http://www.salesforce.com/us/developer/docs/api/index_Left.htm#CSHID=sforce_api_calls_soql.htm|StartTopic=Content%2Fsforce_api_calls_soql.htm|SkinName=webhelp\r\n    \r\n    Salesforce::Account.find(:all, :conditions => \":name = :value\", :value => \"my special name\") \r\n    # Issues a SOQL query to search for all Account objects where the field 'Name' matches \"my special name\"\r\n    # The SOQL Query is SELECT Id,Name,... FROM Account WHERE Name = 'my special name'\r\n    #\r\n    # This method of specifying columns in the query handles custom columns as well.\r\n    Salesforce::Account.find(:all, :conditions => \":account_type = :value\", :value => \"Special\")\r\n    # The SOQL Query issued here is  SELECT Id,Name,... FROM Account WHERE Account_Type__c = 'Special'\r\n    \r\n#### Creating and Updating Objects\r\n\r\n#### Deleting Objects\r\n\r\n## Salesforce Bulk API\r\n\r\nYou can create and schedule a job by:\r\n    \r\n    job = Salesforce::Account.bulk_update do\r\n      batch do\r\n        record account_1 # account_1 is an object of type Salesforce::Account\r\n        record account_2 # account_1 is an object of type Salesforce::Account\r\n      end\r\n    end\r\n\r\nYou can specify the columns that you want to update\r\n    job = Salesforce::Account.bulk_update(:name, :website) do\r\n      batch do\r\n        record account_1 # account_1 is an object of type Salesforce::Account\r\n        record account_2 # account_1 is an object of type Salesforce::Account\r\n      end\r\n    end\r\n    \r\n\r\n    \r\n\r\n### Contributing to activeforce\r\n \r\n* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet\r\n* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it\r\n* Fork the project\r\n* Start a feature/bugfix branch\r\n* Commit and push until you are happy with your contribution\r\n* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.\r\n* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.\r\n\r\n### Copyright\r\n\r\nCopyright (c) 2012 AppFolio, Inc.. See LICENSE.txt for further details.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}